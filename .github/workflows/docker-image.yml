name: Docker Image Build

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.Dockerfile'
      - '**.yml'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      #- '**.Dockerfile'
      - '**.yml'

jobs:
  get-changed-dockerfiles:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            *.Dockerfile
          json: true
          json_raw_format: true

      - name: Generate args matrix
        uses: actions/github-script@v6
        id: generator
        with:
          script: |
            const args = {
              "revdeps.Dockerfile" : {
                tag: "andrjohns/revdeps" ,
                build_args : ["PUID=990", "PGID=986"]
              },
              "stan_triton.Dockerfile" : {
                tag: "andrjohns/stan_triton" ,
                build_args : ""
              }
            };
            var dockerfiles = ${{ steps.changed-files.outputs.all_changed_files }};
            var rtn = dockerfiles.map(dockerfile => {
              return {
                file : dockerfile,
                tag : args[dockerfile].tag,
                build_args : args[dockerfile].buld_args
              }
            });
            console.log(rtn);
            return rtn;

    outputs:
      matrix: ${{ steps.generator.outputs.result }}

  build-and-push-images:
    if: ${{ fromJson(needs.get-changed-dockerfiles.outputs.matrix) }}
    needs:
      - get-changed-dockerfiles
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-changed-dockerfiles.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v3

    - uses: docker/setup-qemu-action@v2

    - uses: docker/setup-buildx-action@v2

    - uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - uses: docker/build-push-action@v4
      with:
        platforms: linux/amd64
        file: ${{ matrix.file }}
        push: true
        build_args: |-
          ${{ join(matrix.build_args, '
          ') }}
        tags: ${{ matrix.tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
